<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><title>Notes</title><id>https://carnotweat.github.io/feeds/tags/lambda-calculus.xml</id><subtitle>Tag: lambda-calculus</subtitle><updated>2023-11-11T09:31:57Z</updated><link href="carnotweat.github.io/feeds/tags/lambda-calculus.xml" rel="self" /><link href="carnotweat.github.io" /><entry><title>Advanced Haskell for beginners!</title><id>https://carnotweat.github.io/advanced-haskell-for-beginners.html</id><author><name>Sameer Gupta</name><email>jasitis@gmail.com</email></author><updated>2023-11-06T18:00:00Z</updated><link href="https://carnotweat.github.io/advanced-haskell-for-beginners.html" rel="alternate" /><summary type="html">&lt;p&gt;This post doesn't deal much with the GHC-toolkit, but with introductry application of the  very
basic ideas of&lt;/p&gt;&lt;ul&gt;&lt;li&gt;lambda calculus&lt;/li&gt;&lt;li&gt;{SKI}/Y- combinators [^1]&lt;/li&gt;&lt;li&gt;&lt;p&gt;from the category of sets to types,functors, monads&lt;/p&gt;&lt;ul&gt;&lt;li&gt;singleton , union&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;church encodings and boolean algebra&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;To the following Haskell data structure manipulations useful in writing a non/deterministic programs&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;traverse&lt;/code&gt; a tree&lt;/li&gt;&lt;li&gt;&lt;code&gt;concat&lt;/code&gt; or &lt;code&gt;fmap&lt;/code&gt;  a list&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;[^1]: Y-combinator for using iterations,recursion in the calculus&lt;/p&gt;</summary></entry></feed>