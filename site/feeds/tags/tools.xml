<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><title>Notes</title><id>https://carnotweat.github.io/feeds/tags/tools.xml</id><subtitle>Tag: tools</subtitle><updated>2023-11-11T09:31:57Z</updated><link href="carnotweat.github.io/feeds/tags/tools.xml" rel="self" /><link href="carnotweat.github.io" /><entry><title>Git</title><id>https://carnotweat.github.io/git.html</id><author><name>Sameer Gupta</name><email>jasitis@gmail.com</email></author><updated>2023-11-07T10:00:00Z</updated><link href="https://carnotweat.github.io/git.html" rel="alternate" /><summary type="html">&lt;p&gt;Git workflow for a quite a capitavitng situation&lt;/p&gt;&lt;p&gt;Notes&lt;/p&gt;&lt;p&gt;I am keeping it github for example here , as it's best known&lt;/p&gt;&lt;p&gt;for use case, consider deploying to a VPS instead of gh-pages&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;upsides&lt;/p&gt;&lt;ul&gt;&lt;li&gt;modularized codebase , a very simple example&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;downsides&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;subtrees are hard to list&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;until git remote add orgin&lt;/p&gt;&lt;p&gt;How I made it work for the first push (inverse order)&lt;/p&gt;&lt;pre&gt;&lt;code&gt;git subtree push  --prefix  site puppet gh-pages
(staging-site way didn't work)
git commit -m “Added mysite files” ./site
#or
git commit -o
git add site
git subtree add --prefix ./site 
git subtree add —-prefix site puppet staging-site
git commit --allow-empty -n -m &amp;quot;Initial commit.&amp;quot;
git-identity (personal-config - before commit)
git remote add puppet https://github.com/carnotweat/carnotweat.github.io/
git init --bare carnotweat.github.io.git
git checkout -b main
git init&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;before adding origin , I ll test git pull gh-pages/cherrypick&lt;/p&gt;&lt;p&gt;To read the state&lt;/p&gt;&lt;pre&gt;&lt;code&gt;git remote -v show  puppet
git status --porcelain
git sub/tree show (aliases )
git worktree list
 git rev-parse HEAD
ls -l .git/refs/heads
git symbolic-ref HEAD&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;To force push&lt;/p&gt;&lt;pre&gt;&lt;code&gt;git subtree split --prefix site gh-pages&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This will (after a lot of numbers) return a token, e.g.&lt;/p&gt;&lt;p&gt;157a66d050d7a6188f243243264c765f18bc85fb956. Then&lt;/p&gt;&lt;pre&gt;&lt;code&gt;git push puppet 157a66d050d7a6188f243243264c765f18bc85fb956:gh-pages --force&lt;/code&gt;&lt;/pre&gt;&lt;h3&gt;Depending on Analysis&lt;/h3&gt;&lt;p&gt;Branch not fully merged&lt;/p&gt;&lt;p&gt;find the number of commits by which your branch is behind the remote&lt;/p&gt;&lt;pre&gt;&lt;code&gt;git rev-list --left-right --count branch remote/branch&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;verify , if you lost any important commit&lt;/p&gt;&lt;pre&gt;&lt;code&gt;git log --graph --left-right --cherry-pick --oneline gh-pages gh-pages-old&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Interective rebase&lt;/p&gt;&lt;pre&gt;&lt;code&gt;git rebase -i HEAD~N
or 
git rebase --edit-todo&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;followed by squash,pick in the $EDITOR ,stash, fetch, rebase,stash, then just add,commit push.[^1]&lt;/p&gt;&lt;p&gt;or&lt;/p&gt;&lt;p&gt;rename the branch as branch-old, fetch from puppet, checkout --track puppet/branch,rebase --root
old --onto branch, checkout branch, delete old, push.&lt;/p&gt;&lt;p&gt;Todo&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Add build source as a (substituitable- variable) library&lt;/li&gt;&lt;/ol&gt;&lt;h3&gt;claiming your commits&lt;/h3&gt;&lt;p&gt;No global git identity config&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;custom made unpublished shell builtins as nix pkgs in home-manager for&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;git-identity&lt;/p&gt;&lt;ul&gt;&lt;li&gt;using secret github emal for git push et al&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;git-import&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;import my gpg secret keys to authorise my commits from this machine.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;There are others , but not relevant for this post&lt;/p&gt;&lt;p&gt;I prefer to sign my commits and even auth them with gpg-agent , instead of ssh-agent , to reduce
complexity. For the latter I need pass and emacs.&lt;/p&gt;&lt;p&gt;My nix[^2] and emacs config are available here. The former depends on flake. The latter is heavily
inspired from another source[^3].&lt;/p&gt;&lt;p&gt;[^1]: It's &lt;em&gt;impossible&lt;/em&gt; to actually edit a commit. Whenever you do something that seems like editing
a commit, what actually happens in the background is the old commit gets deleted and a new one
is created with all the same data except the parts you changed (and a different id).
Since you've &amp;quot;edited&amp;quot; the commit to change the message, you are now behind the remote because the
original commit no longer exists in your local copy.
[^2]:  https://github.com/carnotweat/pipe-forge-nix/tree/master
[^3]: https://mmk2410.org/2023/04/02/publishing-my-emacs-configuration-using-gitea-actions/&lt;/p&gt;</summary></entry></feed>